1. Understand basic huge page allocation and heap memory allocation for mysqld
2. Go into the server to find the usage of storage engine


3. Road to storage engine: from /sql/sql_insert.cc etc file, each of these files will work on a specifc part of sql query and calls lower lever
   torage engine api to achieve it.
   guessed route: sql_prepare, sql_parse, execute
   We will follow sql_insert.cc's path to go through the path and understand what is going on from a query to engine. https://dev.mysql.com/doc/internals/en/guided-tour-skeleton.html

4. Step 3 is partially done, but it is hard to udnerstand what is going on pure by code, we need to understand design first.
   Now read through https://dev.mysql.com/doc/refman/5.7/en/innodb-storage-engine.html to understand how storage engine of innodb works
   and https://dev.mysql.com/doc/dev/mysql-server/8.0.13/
   https://dev.mysql.com/doc/internals/en/custom-engine.html
   http://www.iskm.org/mysql56/pages.html
   
   understand of mysql query part itself on high level is following storage engine as it is not mostly related to my work

4.1 thi whole innodb doc is too long to finish in detail
Planned next steps:
Finish the locking section * done
Look through innodb file and row format done
Finish io management which is important * -> it actually doesn't have much info though
Finish backup and recovery * -> besides binlog, open source version doesn't have much choices
Look through replication -> just commands, binlog seems not specific for innodb but is a mysql feature.


5. after read through high level design, read storage engine code with the code guide 
https://dev.mysql.com/doc/internals/en/files-in-innodb-sources.html

mysql code guide is much more complicated and should be done latter
